name: update-commit-hash

on:
  workflow_call:
    inputs:
      repo-name:
        required: true
        type: string
        description: Name of the repository we're updating commit hash for.  Must be in pytorch org.
      branch:
        required: true
        type: string
        description: Branch to fetch commit of
    secrets:
      MERGEBOT_TOKEN:
        required: true
        description: Permissions for opening PR

env:
  NEW_BRANCH_NAME: update-${{ inputs.repo-name }}-commit-hash/${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}

jobs:
  update-xla-commit-hash:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: false
          token: ${{ secrets.MERGEBOT_TOKEN }}

      - name: Checkout
        shell: bash
        run: |
          git clone https://github.com/pytorch/${{ inputs.repo-name }}.git --depth=1 --quiet

      - name: Check if there already exists a PR
        uses: actions/github-script@v6
        id: already-existing
        with:
          result-encoding: string
          script: |
            const { repo, owner } = context.repo;
            const open_prs = await github.rest.search.issuesAndPullRequests({
              q: `is:pr is:open in:title author:pytorchmergebot repo:${owner}/${repo} ${{ inputs.repo-name }} hash update`
            });
            if (open_prs.data.total_count != 0) {
              const pr = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: open_prs.data.items[0].number,
              });
              return pr.data.head.ref
            } else { return ''; }

      - name: Get new commit hash, update file, push to branch
        shell: bash
        id: update-file
        env:
          BRANCH_NAME: ${{ steps.already-existing.outputs.result || env.NEW_BRANCH_NAME }}
        run: |
          set -x
          pushd ${{ inputs.repo-name }}
          git rev-parse ${{ inputs.branch }} > ../.github/ci_commit_pins/${{ inputs.repo-name }}.txt
          popd

          if [[ $(git diff --exit-code .github/ci_commit_pins/${{ inputs.repo-name }}.txt) ]]; then
            git config --global user.email "pytorchmergebot@users.noreply.github.com"
            git config --global user.name "PyTorch MergeBot"

            git checkout -b "${BRANCH_NAME}"
            git add .github/ci_commit_pins/${{ inputs.repo-name }}.txt
            git commit -m "update ${{ inputs.repo-name }} commit hash"
            git push --set-upstream origin "${BRANCH_NAME}" -f
          else
            echo ::set-output name=no-changes::1
          fi

      - name: Create Pull Request
        uses: actions/github-script@v6
        if: ${{ !steps.already-existing.outputs.result && !steps.update-file.outputs.no-changes}}
        with:
          github-token: ${{ secrets.MERGEBOT_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const { NEW_BRANCH_NAME } = process.env;
            const result = await github.rest.pulls.create({
              title: '[${{ inputs.repo-name }} hash update] update the pinned ${{ inputs.repo-name }} hash',
              owner,
              repo,
              head: `${NEW_BRANCH_NAME}`,
              base: 'master',
              body: [
                'This PR is auto-generated nightly by [this action](https://github.com/pytorch/pytorch/blob/master/.github/workflows/_update-commit-hash.yml).\n',
                `Update the pinned ${{ inputs.repo-name }} hash.`
              ].join('')
            });
